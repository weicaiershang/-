/****************************树*******************************/
对于一个结点，拥有的子树数（结点有多少分支）称为结点的度（Degree）
如果树中结点的子树从左到右看，谁在左边，谁在右边，是有规定的，这棵树称为有序树；反之称为无序树。

/****************************二叉树***************************/
满足以下条件的数为二叉树：
1、本身是有序树；
2、书中包含的各个节点的度不能超过2，即只能是0、1或者2
二叉树的性质：
1、二叉树中，第i层最多有2^(i-1)个节点；
2、如果二叉树的深度为K，那么此二叉树最多有2^K -1个节点；
3、二叉树中、终端节点数（叶子节点数）为n0，度为2的节点数为n2，则n0 = n2 + 1；（推导过程：n0、n2定义同上，n1定义为度为1的节点数，则一棵树的总节点为n = n0 + n1 + n2；另同事，对于每个节点来说，都是由其父节点的分支表示的，假定树的分支数为B，则n = B+1，因为除了根节点，其余节点都有且仅有一个分支与之相连，分支数B = 2*n2 + n1；由以上两个方程可推导 n0 = n2 + 1）

/*******************满二叉树**************************/
如果二叉树中除了叶子节点，每个节点的度都为2，则此二叉树为满二叉树。
满二叉树除了满足普通二叉树的性质，还具有一下性质：
1、满二叉树中第n层的节点数为2^(n-1)个；
2、深度为k的满二叉树必有2^k - 1个节点，叶子数为2^(k-1);
3、满二叉树中不存在度为1的节点，每个分支点中都有两个深度相同的子树，且叶子节点在最底层；
4、具有n个节点的满二叉树的深度为log2（n+1）


/****************完全二叉树********************************/
如果二叉树中除去最后一层节点为满二叉树，且最后一层的节点一次从左到右分布，则此二叉树被称为完全二叉树。

            1                           1
           / \                         / \
          /   \                       /   \
         2     3                     2     3
        / \   /                     / \     \
       4   5 6                     4   5     6
       完全二叉树                 非完全二叉树
    如上图所示，左边是一颗完全二叉树，右边的由于最后一层没有按照从左向右分布，因此只能算是普通的二叉树。
对于任意一个完全二叉树来书，如果将含有的节点按照层次从左到右依次标号，如上左图，则对于任意一个节点i，完全二叉树还有以下。

/******************************树的顺序存储*********************/
数组只适合存储完全二叉树（满二叉树是完全二叉树的一种），按层次遍历树，依次存储即可。
数组存储普通二叉树，需要将空的位置补零，会造成存储空间的浪费。


